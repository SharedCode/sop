# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "master", "value_data_segment"]
  pull_request:
    branches: [ "master", "value_data_segment"]

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.24.3'

    - name: Build
      run: go build -v ./inmemory ./inredfs

    - name: Unit tests with coverage
      run: |
        mkdir -p coverage
        go test -timeout 600s -race -covermode=atomic -coverprofile=coverage/unit_coverage.out -coverpkg ./btree/... ./inmemory/... ./inredfs

    - name: Build Docker image for integration tests
      run: docker build -t sop-integration:ci .

    - name: Run integration tests in Docker (produces coverage)
      run: |
        mkdir -p coverage
        docker run --rm -v "${{ github.workspace }}/coverage":/coverage sop-integration:ci

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v3
      with:
        files: |
          coverage/unit_coverage.out
          coverage/integration_coverage.out
        token: ${{ secrets.CODECOV_TOKEN }}
